{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onShow","showAdd","location","useLocation","pathname","Task","t","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","deleteTask","filter","toggleReminder","addTask","task","Math","floor","random","newTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.077846b9.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ( { color, text, onClick } ) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color}}\r\n      className=\"btn\"\r\n    >\r\n    {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'black',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({ title, onShow, showAdd }) => {\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{ title }</h1>\r\n      {location.pathname === '/' && (\r\n        <Button color={showAdd ? 'purple' : 'blue'} text={showAdd ? 'Hide' : 'Add'} onClick={onShow} />\r\n      )}\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ t, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${t.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(t.id)}>\r\n      <h3>\r\n        {t.text}\r\n        <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(t.id)} />\r\n        </h3>\r\n      <p>{t.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map(t => {\r\n        return (\r\n          <Task key={t.id} t={t} onDelete={onDelete} onToggle={onToggle}/>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please add task')\r\n      return\r\n    }\r\n\r\n    onAdd({text,day,reminder})\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add task\"\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add day & time\"\r\n          value={day}\r\n          onChange={e => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={e => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" className=\"btn btn-block\" value=\"save\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      <Link to=\"/about\">About</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Get back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import { useState, useEffect } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'eat ice-cream',\n      day: '01.01.2021 at 7:00am',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'eat ice-cream',\n      day: '01.01.2021 at 8:00am',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'eat ice-cream',\n      day: '01.01.2021 at 9:00am',\n      reminder: false,\n    },\n  ])\n  //setTasks([...tasks, {}]) -> aktualizacja state\n\n  //fetching data\n /*  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTask()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n  \n  const fetchTask = async () => {\n    const res = await fetch('url')\n    const data = await res.json()\n\n    return data\n  } */\n\n  //delete task\n  const deleteTask = (id) => {\n    /* await fetch(`url/${id}`, {method: 'DELETE',}) */\n    setTasks(tasks.filter(t => t.id !== id))\n  }\n\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map(t => t.id === id ? {...t, reminder: !t.reminder} : t))\n  }\n\n  //add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  //add task with API\n /*  const addTask = async (task) => {\n    const res = await fetch('url', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n  } */\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onShow={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n        <Route path='/' exact render={props => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask}/>}\n            {tasks.length > 0 ? (\n              <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n            ) : (\n              'No task to show'\n            )}\n          </>\n        )}\n        />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}